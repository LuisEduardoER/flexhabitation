<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="706" height="454" title="Cadastro de Motoristas"
	showCloseButton="true" close="PopUpManager.removePopUp(this)" creationComplete="onInit()" styleName="TitleWindow">
	
	<!--Setando O Estilo da pagina -->
	<mx:Style source="assets/css/css.css"/>
	
	<!--Começando o escript de programação-->
	<mx:Script>
	
		<![CDATA[
			import mx.controls.ComboBox;
			import mx.controls.Alert;
		
			//Import's
			import br.com.cba.modelo.CadMotoristasModelo;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import framework.MKGBController;
			import br.com.cba.modelo.CadVeiculosModelo;
			import mx.managers.PopUpManager;
			
			//Variaveis
			private var _cont:MKGBController;

			[Bindable]
			private var _dataSet:ArrayCollection;
			
		//Funções
			
		//Função Inicial
		protected function onInit():void{
			_cont = new MKGBController();
			clearForm(CanvasForm);
		}
			
		//Função para limpar os campos do formulario
		private function clearForm(obj:Object):void{
			var i:int;
			for (i = 0; i < obj.numChildren; i ++){
				var objeto:Object =  obj.getChildAt(i);
				if(obj.getChildAt(i) is TextImputCustom){
					obj.getChildAt(i).text = "";
			  	}
			  		if(obj.getChildAt(i) is ComboBox){
			  			obj.getChildAt(i).selectedIndex = -1
			  		}
		   	  }
		   	  	btnNovo.enabled = true;
				btnSalvar.enabled = false;
				btnCancelar.enabled = false;
				btnBuscar.enabled = true;
				btnEditar.enabled = false;
				btnExcluir.enabled = false;
				btnSair.enabled = true;
				lbInfo.setStyle("color" , "Black");
				lbInfo.text = "";
		}
			
		//Valida os campos obrigatorios
		private function validate(obj:Object):void{
			var i:int;
			for (i = 0; i < obj.numChildren; i ++){
				var objeto:Object =  obj.getChildAt(i);
				if(obj.getChildAt(i) is TextImputCustom){
					if (obj.getChildAt(i).Requerido == true && obj.getChildAt(i).text == '') {
						//Alert.show("O Campo "+ !obj.getChildAt(i).id.text +",nao pode ficar em branco","ATENÇÃO!!");
						validation(obj.getChildAt(i));
					}
			  	}
		   	}
		   	//Insere ou altera os dados do formulario no banco de dados
		   	insertOrUpdate();
		}
		
		private function validation(campo:Object):void {
			var strNomeCampo:String;
			
			strNomeCampo = campo.NomeCampo;
			
			//campo.setFocus();
			lbInfo.setStyle("color" , "Red");
			lbInfo.text = "O campo " + strNomeCampo + " não pode ficar vazio.";

		}
		
		//Função para verificar se insere ou altera os itens do banco
		private function insertOrUpdate():void{
			if(dataGrid.selectedIndex > -1){
				//Alert.show("Alterando dados funciono eee :D","Alterendo!!");
				onUpdate();
			}else{
				//Alert.show("Inserindo dados funciono eee :D","Inserindo!!");
				onInsert();
		   	}
		}
		
		//Função que insere os itens no banco	
		public function onInsert():void{
		}
		
		//Função que altera os itens no banco	
		public function onUpdate():void{
		//	var cvm:CadMotoristasModelo = new CadMotoristasModelo();
		//		cvm = CadMotoristasModelo(dgVeiculos.selectedItem);
		//		cvm.carteira_motorista = tiCarteiraMotorista.text;
		//		cvm.cpf = tiCpf.text;
		//		cvm.idade = tiIdade.text;
		//		cvm.nome = tiNome.text;
				
		//		_cont.destinationAlternativo = "Cadastro";
		//		_cont.executeLocal("CadMotoristasAlterar", [cvm], CadMotoristasAlterarResult, this);
		}
			
		//Função result do insert	
		public function IncluirResult(e:ResultEvent):void{
		//	tiId.text = e.result.idcadmotorista;
			lbInfo.setStyle("color" , "Black");
			lbInfo.text = "Item Inserido com sucesso!";
			
			btnNovo.enabled = true;
			btnSalvar.enabled = false;
			btnCancelar.enabled = true;
			btnBuscar.enabled = true;
			btnEditar.enabled = false;
			btnExcluir.enabled = false;
			btnSair.enabled = false;
		}
		
		//Função listar itens do banco	
		protected function onlist():void{
			CanvasForm.visible          = false;
			CanvasForm.includeInLayout  = false;
			
			CanvasDg.visible          = true;
			CanvasDg.includeInLayout  = true;
			
			lbInfo.setStyle("color" , "Black");
			lbInfo.text = "";
			
			btnNovo.enabled = true;
			btnSalvar.enabled = false;
			btnCancelar.enabled = false;
			btnBuscar.enabled = false;
			btnEditar.enabled = true;
			btnExcluir.enabled = true;
			btnSair.enabled = true;
			
		//	_cont.destinationAlternativo = "Cadastro";
		//	_cont.executeLocal("CadMotoristasListar",[],CadMotoristasListarResult,this,"_Motoristas",true);
		}
			
		protected function ListarResult(e:ResultEvent):void{
			dataSet = e.result as ArrayCollection;
		}
			
		public function onEditar():void {
			if(dataGrid.selectedItem != null){
				lbInfo.setStyle("color" , "Black");
				lbInfo.text = "";
				
				CanvasForm.visible          = true;
				CanvasForm.includeInLayout  = true;
			
				CanvasDg.visible          = false;
				CanvasDg.includeInLayout  = false;
				
				btnNovo.enabled = false;
				btnSalvar.enabled = true;
				btnCancelar.enabled = true;
				btnBuscar.enabled = false;
				btnEditar.enabled = false;
				btnExcluir.enabled = false;
				btnSair.enabled = false;
			
			//	tiIdade.text = dgVeiculos.selectedItem.idade;
			//	tiId.text = dgVeiculos.selectedItem.idcadmotorista;
			//	tiNome.text = dgVeiculos.selectedItem.nome;
			//	tiCpf.text = dgVeiculos.selectedItem.cpf;
			//	tiCarteiraMotorista.text = dgVeiculos.selectedItem.carteira_motorista;
			}else{
				lbInfo.setStyle("color" , "Red");
				lbInfo.text = "Favor Selecionar Um Registro Para Editar";
			}
		}
			
			
			
		public function onExcluir():void {
			if(dataGrid.selectedItem != null){
				lbInfo.setStyle("color" , "Black");
				lbInfo.text = "";
				
			//	_cont.destinationAlternativo = "Cadastro";
			//	_cont.executeLocal("CadMotoristasExcluir",[dgVeiculos.selectedItem],CadMotoristasExcluirResult,this,"",true);
			}else{
				lbInfo.setStyle("color" , "Red");
				lbInfo.text = "Favor Selecionar Um Registro Para Excluir";
			}
		}
			
		public function ExcluirResult(e:ResultEvent):void{
		//	_cont.executeLocal("CadMotoristasListar",[],CadMotoristasListarResult,this,"_Veiculos",true);
		}
		
		private function AlterarResult(e:ResultEvent):void{
			btnNovo.enabled = true;
			btnSalvar.enabled = false;
			btnCancelar.enabled = true;
			btnBuscar.enabled = true;
			btnEditar.enabled = false;
			btnExcluir.enabled = false;
			btnSair.enabled = false;
			
			lbInfo.setStyle("color" , "Black");
			lbInfo.text = "Alteração Efetuada Com Sucesso!";
		}
		
		//Função novo registro
		public function onClickNovo():void {
			clearForm(CanvasForm);
			dataGrid.selectedIndex = -1;
			
			CanvasForm.visible          = true;
			CanvasForm.includeInLayout  = true;
			
			CanvasDg.visible          = false;
			CanvasDg.includeInLayout  = false;
			
			lbInfo.setStyle("color" , "Black");
			lbInfo.text = "";
			
			btnNovo.enabled = false;
			btnSalvar.enabled = true;
			btnCancelar.enabled = true;
			btnBuscar.enabled = false;
			btnEditar.enabled = false;
			btnExcluir.enabled = false;
			btnSair.enabled = false;
		}
		[Bindable]
		public function get dataSet():ArrayCollection {	
			return _dataSet;
		}
		public function set dataSet(value:ArrayCollection):void{
			_dataSet = value;
		}
			
		]]>
	</mx:Script>
	<mx:HBox height="64" left="0" right="0" top="10">
		<mx:Button id="btnNovo" label="Novo" height="100%" width="75" click="onClickNovo()" labelPlacement="bottom">
			<mx:icon>@Embed(source='../../../../assets/Icons/Icons 32X32/new.png')</mx:icon>
		</mx:Button>
		<mx:Button id="btnSalvar" label="Salvar" height="100%" click="validate(CanvasForm)" icon="@Embed(source='../../../../assets/Icons/Icons 32X32/accept.png')" labelPlacement="bottom" width="75"/>
		<mx:Button id="btnCancelar" label="Cancelar" height="100%" click="clearForm(CanvasForm)" labelPlacement="bottom" width="75">
			<mx:icon>@Embed(source='../../../../assets/Icons/Icons 32X32/cancel.png')</mx:icon>
		</mx:Button>
		<mx:Button id="btnBuscar" label="Buscar" height="100%" click="onlist()" labelPlacement="bottom" width="75">
			<mx:icon>@Embed(source='../../../../assets/Icons/Icons 32X32/search.png')</mx:icon>
		</mx:Button>
		<mx:Button id="btnEditar" label="Editar" height="100%" click="onEditar()" labelPlacement="bottom" width="75">
			<mx:icon>@Embed(source='../../../../assets/Icons/Icons 32X32/edit.png')</mx:icon>
		</mx:Button>
		<mx:Button id="btnExcluir" label="Excluir" height="100%" click="onExcluir()" width="75" labelPlacement="bottom">
			<mx:icon>@Embed(source='../../../../assets/Icons/Icons 32X32/trash.png')</mx:icon>
		</mx:Button>
		<mx:Button id="btnSair" label="Sair" height="100%" width="75" labelPlacement="bottom"
			click="PopUpManager.removePopUp(this)">
			<mx:icon>@Embed(source='../../../../assets/Icons/Icons 32X32/iconeLogout.png')</mx:icon>
		</mx:Button>
	</mx:HBox>
	<mx:Canvas id="CanvasForm" visible="true" right="0" top="82" left="0" bottom="29">
	</mx:Canvas>
	<mx:Canvas id="CanvasDg" x="0" y="73" width="100%" height="310" visible="false" top="82" left="0" bottom="29">
		<mx:DataGrid id="dataGrid" dataProvider="{this.dataSet}" y="0" height="100%" right="0" left="0"
			doubleClickEnabled="true" doubleClick="onEditar()">
		</mx:DataGrid>
	</mx:Canvas>
	<mx:Canvas height="21" right="0" left="0" borderStyle="solid" borderColor="#000000" cornerRadius="6" bottom="0">
		<mx:Label id="lbInfo" text="Info" textAlign="center" fontWeight="bold" fontSize="11" height="100%" bottom="0" left="0" right="0"/>
	</mx:Canvas>
	
</mx:TitleWindow>
